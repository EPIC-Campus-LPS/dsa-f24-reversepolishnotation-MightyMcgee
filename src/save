//            boolean op = false;
//            for (int j=0; j<operators.length; j++) {
//                if (s[i].equals(operators[j]) && stack.isEmpty()) {
//                    stack.push(s[i]);
//                    op = true;
//                } else if (s[i].equals(operators[j]) && !stack.isEmpty()) {
//                    if (s[i].equals(")")){
//                        for (int a=stack.size(); a>0; a--){
//                            if (stack.peek() != ("(")){
//                                output += stack.pop();
//                            }
//                            else {
//                                stack.pop();
//                                break;
//                            }
//                        }
//                    }
//                    if (s[i].equals("(")){
//                        stack.push(s[i]);
//                    }
//                    if (s[i].equals("*") || s[i].equals("/")){
//                        if (stack.peek().equals("+") || stack.peek().equals("-")){
//                            stack.push(s[i]);
//                        }
//                        else {
//                            stack.push(s[i]);
//                        }
//                    }
//                }
//            }
//            if (!op){
//                output += s[i];
//            }
static String infixToPostfix(String input){
        String[] s = input.split(" ");
        Stack stack = new Stack();
        String[] operators = {"+","-","*","/","(",")","^"};
        String output = "";
        for (int i=0; i<s.length; i++){

        }
        System.out.print(output+"\n");
        return output;
    }